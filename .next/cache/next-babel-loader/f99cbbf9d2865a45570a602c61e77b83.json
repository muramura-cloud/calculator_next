{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nconst initial = {\n  message: 'START',\n  data: [],\n  number: [],\n  result: 0\n};\n\nfunction calcReducer(state = initial, action) {\n  switch (action.type) {\n    case 'ENTER':\n      let data2 = state.data.slice();\n      let s = action.value;\n      data2.unshift(s);\n      let num = s.replace(/[^0-9]/g, \"\");\n      let number2 = state.number.slice();\n      number2.unshift(num);\n      let result = state.result * 1 + num * 1;\n      return {\n        message: 'ENTER',\n        data: data2,\n        number: number2,\n        result: result\n      };\n\n    case 'RESET':\n      return {\n        message: 'RESET',\n        data: [],\n        number: [],\n        result: 0\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport function initStore(state = initial) {\n  return createStore(calcReducer, state, applyMiddleware(thunkMiddleware));\n}","map":null,"metadata":{},"sourceType":"module"}