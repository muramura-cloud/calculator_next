{"ast":null,"code":"var _jsxFileName = \"/Users/muratariku/Desktop/REACT-REVIEW/next-app/components/Counter.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 15px\"\n    });\n\n    this.doAction = this.doAction.bind(this);\n    this.doReset = this.doReset.bind(this);\n  }\n\n  doAction(e) {\n    if (e.shiftKey) {\n      this.props.dispatch({\n        type: 'DECREMENT'\n      });\n    } else {\n      return this.props.dispatch({\n        type: 'INCREMENT'\n      });\n    }\n  }\n\n  doReset(e) {\n    return this.props.dispatch({\n      type: 'RESET'\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      style: this.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, this.props.message, \":\", this.props.count), __jsx(\"button\", {\n      style: this.style,\n      onClick: this.doAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, \"click\"), __jsx(\"button\", {\n      style: this.style,\n      onClick: this.doReset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, \"reset\"));\n  }\n\n}\n\nCounter = connect(state => state)(Counter);\nexport default Counter;","map":{"version":3,"sources":["/Users/muratariku/Desktop/REACT-REVIEW/next-app/components/Counter.js"],"names":["React","Component","connect","Counter","constructor","props","fontSize","padding","doAction","bind","doReset","e","shiftKey","dispatch","type","render","style","message","count","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAM5BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,mCALX;AACJC,MAAAA,QAAQ,EAAE,MADN;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAKW;;AAEf,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACH;;AAEDD,EAAAA,QAAQ,CAACG,CAAD,EAAI;AACR,QAAIA,CAAC,CAACC,QAAN,EAAgB;AACX,WAAKP,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAApB;AACJ,KAFD,MAEO;AACH,aAAO,KAAKT,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAApB,CAAP;AACH;AACJ;;AACDJ,EAAAA,OAAO,CAACC,CAAD,EAAI;AACP,WAAO,KAAKN,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAApB,CAAP;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,KAAK,EAAE,KAAKC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuB,KAAKX,KAAL,CAAWY,OAAlC,OAA4C,KAAKZ,KAAL,CAAWa,KAAvD,CADJ,EAEI;AAAQ,MAAA,KAAK,EAAE,KAAKF,KAApB;AAA2B,MAAA,OAAO,EAAE,KAAKR,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAGI;AAAQ,MAAA,KAAK,EAAE,KAAKQ,KAApB;AAA2B,MAAA,OAAO,EAAE,KAAKN,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CADJ;AAOH;;AA/B2B;;AAkChCP,OAAO,GAAGD,OAAO,CAAEiB,KAAD,IAAWA,KAAZ,CAAP,CAA0BhB,OAA1B,CAAV;AACA,eAAeA,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Counter extends Component {\n    style = {\n        fontSize: \"12pt\",\n        padding: \"5px 15px\",\n    }\n\n    constructor(props) {\n        super(props);\n        this.doAction = this.doAction.bind(this);\n        this.doReset = this.doReset.bind(this);\n    }\n\n    doAction(e) {\n        if (e.shiftKey) {\n             this.props.dispatch({ type: 'DECREMENT' });\n        } else {\n            return this.props.dispatch({ type: 'INCREMENT' });\n        }\n    }\n    doReset(e) {\n        return this.props.dispatch({ type: 'RESET' });\n    }\n\n    render() {\n        return (\n            <div>\n                <p style={this.style}>{this.props.message}:{this.props.count}</p>\n                <button style={this.style} onClick={this.doAction}>click</button>\n                <button style={this.style} onClick={this.doReset}>reset</button>\n            </div>\n        );\n    }\n}\n\nCounter = connect((state) => state)(Counter);\nexport default Counter;"]},"metadata":{},"sourceType":"module"}