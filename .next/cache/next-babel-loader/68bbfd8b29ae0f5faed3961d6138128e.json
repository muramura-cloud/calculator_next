{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nvar Counter = /*#__PURE__*/function (_Component) {\n  _inherits(Counter, _Component);\n\n  var _super = _createSuper(Counter);\n\n  function Counter(props) {\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 15px\"\n    });\n\n    _this.doAction = _this.doAction.bind(_assertThisInitialized(_this));\n    _this.doReset = _this.doReset.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"doAction\",\n    value: function doAction(e) {\n      if (e.shiftKey) {\n        return this.props.dispatch({\n          type: 'DECREMENT'\n        });\n      } else {\n        return this.props.dispatch({\n          type: 'INCREMENT'\n        });\n      }\n    }\n  }, {\n    key: \"doReset\",\n    value: function doReset(e) {\n      return this.props.dispatch({\n        type: 'RESET'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(\"p\", {\n        style: this.style\n      }, this.props.message, \":\", this.props.count), __jsx(\"button\", {\n        style: this.style,\n        onClick: this.doAction\n      }, \"click\"), __jsx(\"button\", {\n        style: this.style,\n        onClick: this.doReset\n      }, \"reset\"));\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nCounter = connect(function (state) {\n  return state;\n})(Counter);\nexport default Counter;","map":null,"metadata":{},"sourceType":"module"}