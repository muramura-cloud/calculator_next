{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 15px\"\n    });\n\n    this.doAction = this.doAction.bind(this);\n    this.doReset = this.doReset.bind(this);\n  }\n\n  doAction(e) {\n    if (e.shiftKey) {\n      return this.props.dispatch({\n        type: 'DECREMENT'\n      });\n    } else {\n      return this.props.dispatch({\n        type: 'INCREMENT'\n      });\n    }\n  }\n\n  doReset(e) {\n    return this.props.dispatch({\n      type: 'RESET'\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(\"p\", {\n      style: this.style\n    }, this.props.message, \":\", this.props.count), __jsx(\"button\", {\n      style: this.style,\n      onClick: this.doAction\n    }, \"click\"), __jsx(\"button\", {\n      style: this.style,\n      onClick: this.doReset\n    }, \"reset\"));\n  }\n\n}\n\nCounter = connect(state => state)(Counter);\nexport default Counter;","map":null,"metadata":{},"sourceType":"module"}