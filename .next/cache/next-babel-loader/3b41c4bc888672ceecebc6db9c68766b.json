{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nconst initial = {\n  message: 'START',\n  data: [],\n  number: [],\n  result: 0\n};\n\nfunction calcReducer(state = initial, action) {\n  switch (action.type) {\n    case 'ENTER':\n      let data2 = state.data.slice();\n      let s = action.value;\n      data2.unshift(s);\n      let num = s.replace(/[^0-9]/g, \"\");\n      let number2 = state.number.slice();\n      number2.unshift(num);\n      let result = state.result * 1 + num * 1;\n      return {\n        message: 'ENTER',\n        data: data2,\n        number: number2,\n        result: result\n      };\n\n    case 'RESET':\n      return {\n        message: 'RESET',\n        data: [],\n        number: [],\n        result: 0\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport function initStore(state = initial) {\n  return createStore(calcReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/muratariku/Desktop/REACT-REVIEW/next-app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","message","data","number","result","calcReducer","state","action","type","data2","slice","s","value","unshift","num","replace","number2","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAE,OADG;AAEZC,EAAAA,IAAI,EAAE,EAFM;AAGZC,EAAAA,MAAM,EAAE,EAHI;AAIZC,EAAAA,MAAM,EAAE;AAJI,CAAhB;;AAOA,SAASC,WAAT,CAAqBC,KAAK,GAAGN,OAA7B,EAAsCO,MAAtC,EAA8C;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,OAAL;AACI,UAAIC,KAAK,GAAGH,KAAK,CAACJ,IAAN,CAAWQ,KAAX,EAAZ;AACA,UAAIC,CAAC,GAAGJ,MAAM,CAACK,KAAf;AACAH,MAAAA,KAAK,CAACI,OAAN,CAAcF,CAAd;AACA,UAAIG,GAAG,GAAGH,CAAC,CAACI,OAAF,CAAU,SAAV,EAAqB,EAArB,CAAV;AACA,UAAIC,OAAO,GAAGV,KAAK,CAACH,MAAN,CAAaO,KAAb,EAAd;AACAM,MAAAA,OAAO,CAACH,OAAR,CAAgBC,GAAhB;AACA,UAAIV,MAAM,GAAIE,KAAK,CAACF,MAAN,GAAe,CAAhB,GAAsBU,GAAG,GAAG,CAAzC;AACA,aAAO;AACHb,QAAAA,OAAO,EAAE,OADN;AAEHC,QAAAA,IAAI,EAAEO,KAFH;AAGHN,QAAAA,MAAM,EAAEa,OAHL;AAIHZ,QAAAA,MAAM,EAAEA;AAJL,OAAP;;AAMJ,SAAK,OAAL;AACI,aAAO;AACHH,QAAAA,OAAO,EAAE,OADN;AAEHC,QAAAA,IAAI,EAAE,EAFH;AAGHC,QAAAA,MAAM,EAAE,EAHL;AAIHC,QAAAA,MAAM,EAAE;AAJL,OAAP;;AAMJ;AACI,aAAOE,KAAP;AAvBR;AAyBH;;AAED,OAAO,SAASW,SAAT,CAAmBX,KAAK,GAAGN,OAA3B,EAAoC;AACvC,SAAOH,WAAW,CAACQ,WAAD,EAAcC,KAAd,EAAqBR,eAAe,CAACC,eAAD,CAApC,CAAlB;AACH","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nconst initial = {\n    message: 'START',\n    data: [],\n    number: [],\n    result: 0,\n}\n\nfunction calcReducer(state = initial, action) {\n    switch (action.type) {\n        case 'ENTER':\n            let data2 = state.data.slice();\n            let s = action.value;\n            data2.unshift(s);\n            let num = s.replace(/[^0-9]/g, \"\");\n            let number2 = state.number.slice();\n            number2.unshift(num);\n            let result = (state.result * 1) + (num * 1);\n            return {\n                message: 'ENTER',\n                data: data2,\n                number: number2,\n                result: result,\n            };\n        case 'RESET':\n            return {\n                message: 'RESET',\n                data: [],\n                number: [],\n                result: 0,\n            };\n        default:\n            return state;\n    }\n}\n\nexport function initStore(state = initial) {\n    return createStore(calcReducer, state, applyMiddleware(thunkMiddleware))\n}"]},"metadata":{},"sourceType":"module"}