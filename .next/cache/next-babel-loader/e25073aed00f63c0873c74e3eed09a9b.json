{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { hydrate } from 'react-dom';\n\nclass Calc extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    this.state = {\n      input: ''\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.doAction = this.doAction.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      input: e.target.value\n    });\n  }\n\n  onKeyPress(e) {\n    if (event.keyCode == 13) {\n      this.doAction(e);\n    }\n  }\n\n  doAction(e) {\n    this.setState({\n      input: ''\n    });\n    return this.props.dispatch({\n      type: 'ENTER',\n      value: this.state.input\n    });\n  }\n\n  reset() {\n    this.setState({\n      input: ''\n    });\n    return this.props.dispatch({\n      type: 'RESET'\n    });\n  }\n\n  render() {\n    let result = [];\n    let n = this.props.data.length;\n\n    for (let i = 0; i < n; i++) {\n      result.push(__jsx(\"tr\", {\n        key: i\n      }, __jsx(\"td\", null, this.props.data[i]), __jsx(\"td\", null, this.props.number[i])));\n    }\n\n    return __jsx(\"div\", null, __jsx(\"p\", null, \"TOTAL:\", this.props.result), __jsx(\"input\", {\n      type: \"text\",\n      style: this.style,\n      size: \"40\",\n      value: this.state.input,\n      onChange: this.onChange,\n      onKeyPress: this.onKeyPress\n    }), __jsx(\"button\", {\n      style: this.style,\n      onClick: this.doAction\n    }, \"ENTER\"), __jsx(\"button\", {\n      style: this.style,\n      onClick: this.reset\n    }, \"RESET\"), __jsx(\"hr\", null), __jsx(\"table\", null, __jsx(\"tbody\", null, result)), __jsx(\"p\", null, this.props.message));\n  }\n\n}\n\nCalc = connect(state => state)(Calc);\nexport default Calc;","map":null,"metadata":{},"sourceType":"module"}